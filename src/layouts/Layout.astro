---
import '@/styles/normalize.css'
import '@/styles/reset.local.css'
import '@/styles/tokens.css'
import '@/styles/classes.css'
import Navbar from '@/components/Navbar.svelte'
import SEO from '@/components/SEO.astro'

export interface Props {
  title?: string
  description?: string
}

const { title, description } = Astro.props
const displayTitle = title ? `${title} | Octagon API` : 'Octagon API'
---

<!doctype html>
<html lang='en'>
  <head>
    <SEO
      description={description}
      title={title ?? 'Octagon API'}
    />
    <link
      rel='icon'
      type='image/svg+xml'
      href='/favicon.svg'
    />
    <link
      rel='sitemap'
      href='/sitemap-index.xml'
    />
    <title>{displayTitle}</title>
    <slot name='head' />
  </head>
  <body>
    <Navbar client:visible />
    <slot />
    <script is:inline>
      // Inline: not bundled, so will execute the first
      // We need to load theme asap, so we are handling it in the layout.
      const STORAGE_THEME_KEY = 'theme'
      const getLocalStorageTheme = (localStorageKey) => {
        if (localStorage && localStorage.getItem(localStorageKey))
          return localStorage.getItem(localStorageKey)
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) return 'dark'
        return 'light'
      }

      const theme = getLocalStorageTheme(STORAGE_THEME_KEY)
      const isDark = theme === 'dark'
      document.documentElement.classList.toggle('theme-dark', isDark)
    </script>

    <style is:global>
      main {
        display: flex;
        flex-grow: 1;
        flex-direction: column;
        align-items: center;
        gap: 2rem;
        padding: 1.5rem 0;
        width: var(--section-width);
      }
    </style>
  </body>
</html>
