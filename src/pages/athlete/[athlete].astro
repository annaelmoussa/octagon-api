---
import Layout from '@layouts/Layout.astro'
import ScoreChart from '@components/ScoreChart.astro'
import data from '@db/fighters.json'

interface Props {
  athlete: string
}

export function getStaticPaths() {
  const params = Object.keys(data).map((fighterId) => {
    const athleteInfo = data[fighterId]
    return { params: { athlete: fighterId }, props: { ...athleteInfo } }
  })

  return params
}

const { athlete } = Astro.params
const {
  age,
  category,
  draws,
  fightingStyle,
  height,
  hometown,
  legReach,
  losses,
  name,
  nickname,
  octagonDebut,
  reach,
  trainsAt,
  weight,
  wins,
} = Astro.props
---

<Layout title={`${athlete} | UFC API`}>
  <main>
    <h1>{name}</h1>
    {nickname ? <h2>"{nickname}"</h2> : null}
    <section class='record-board-container'>
      <img
        src={`/fighters/${athlete}.webp`}
        alt='Peleador'
      />
      <ScoreChart
        wins={wins}
        losses={losses}
        draws={draws}
      />
    </section>
    <div class='data-container'><span>Age:</span> {age}</div>
    <div class='data-container'><span>Category:</span> {category}</div>
    {
      fightingStyle ? (
        <div class='data-container'>
          <span>Fighting style:</span> {fightingStyle}
        </div>
      ) : null
    }
    <div class='data-container'><span>Height:</span> {height}</div>
    <div class='data-container'><span>Hometown:</span> {hometown}</div>
    <div class='data-container'><span>Debut:</span> {octagonDebut}</div>
    <div class='data-container'><span>Reach:</span> {reach}</div>
    <div class='data-container'><span>Leg reach:</span> {legReach}</div>
    <div class='data-container'><span>Gym:</span> {trainsAt}</div>
    <div class='data-container'><span>Weight:</span> {weight}</div>
  </main>
</Layout>

<style>
  .record-board-container {
    display: flex;
    justify-content: space-between;
    gap: 0.7rem;
    flex-direction: row;

    padding: 1rem;
    padding-bottom: 0;
    border-radius: 5px;
    background: #1c0674;
    background: linear-gradient(45deg, #1c0674 0%, #de2da2 100%);
  }
  section {
    display: flex;
    flex-direction: column;
    gap: 0.7rem;
  }
  main {
    display: flex;
    flex-direction: column;
  }
  h1 {
    font-size: 3rem;
  }
  h2 {
    font-size: 2rem;
    color: #333;
  }
  a {
    font-weight: 600;
    width: fit-content;
  }

  .data-container {
    font-size: 1.3rem;
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
  }
  .data-container span {
    color: #222;
    font-weight: 600;
  }

  img {
    aspect-ratio: 460 / 700;
    width: 150px;
  }

  @media only screen and (min-width: 768px) {
    img {
      width: 270px;
    }
  }
</style>
